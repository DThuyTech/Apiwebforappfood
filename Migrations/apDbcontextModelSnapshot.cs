// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiforapp.Models;

#nullable disable

namespace apiforapp.Migrations
{
    [DbContext(typeof(apDbcontext))]
    partial class apDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("apiforapp.Models.DetailDietFood", b =>
                {
                    b.Property<int>("idDetailDietFood")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetailDietFood"), 1L, 1);

                    b.Property<int>("bref")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("dietidDiet")
                        .HasColumnType("int");

                    b.Property<int>("foodIdFood")
                        .HasColumnType("int");

                    b.Property<int>("idDiet")
                        .HasColumnType("int");

                    b.Property<int>("idFood")
                        .HasColumnType("int");

                    b.HasKey("idDetailDietFood");

                    b.HasIndex("dietidDiet");

                    b.HasIndex("foodIdFood");

                    b.ToTable("detailDietFoods");
                });

            modelBuilder.Entity("apiforapp.Models.DetailNutributionFood", b =>
                {
                    b.Property<int>("IdNutributionFood")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNutributionFood"), 1L, 1);

                    b.Property<int>("IdFoods")
                        .HasColumnType("int");

                    b.Property<int>("IdNutribution")
                        .HasColumnType("int");

                    b.Property<int>("foodIdFood")
                        .HasColumnType("int");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<int>("nutributionIdNutribution")
                        .HasColumnType("int");

                    b.HasKey("IdNutributionFood");

                    b.HasIndex("foodIdFood");

                    b.HasIndex("nutributionIdNutribution");

                    b.ToTable("detailNutributionFoods");
                });

            modelBuilder.Entity("apiforapp.Models.DetailPurpose", b =>
                {
                    b.Property<int>("idPurposedetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPurposedetail"), 1L, 1);

                    b.Property<int>("idPurpose")
                        .HasColumnType("int");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<int>("purposeIdPurpose")
                        .HasColumnType("int");

                    b.Property<int>("userIdUser")
                        .HasColumnType("int");

                    b.HasKey("idPurposedetail");

                    b.HasIndex("purposeIdPurpose");

                    b.HasIndex("userIdUser");

                    b.ToTable("detailPurposes");
                });

            modelBuilder.Entity("apiforapp.Models.Diet", b =>
                {
                    b.Property<int>("idDiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDiet"), 1L, 1);

                    b.Property<DateTime>("dateStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.Property<int>("isActive")
                        .HasColumnType("int");

                    b.Property<int>("usserIdUser")
                        .HasColumnType("int");

                    b.HasKey("idDiet");

                    b.HasIndex("usserIdUser");

                    b.ToTable("diets");
                });

            modelBuilder.Entity("apiforapp.Models.Food", b =>
                {
                    b.Property<int>("IdFood")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFood"), 1L, 1);

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFoodTypes")
                        .HasColumnType("int");

                    b.Property<string>("NameFoodPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ratecount")
                        .HasColumnType("int");

                    b.Property<string>("RecipePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("cacbonhydrat")
                        .HasColumnType("real");

                    b.Property<float>("calories")
                        .HasColumnType("real");

                    b.Property<float>("fat")
                        .HasColumnType("real");

                    b.Property<float>("protein")
                        .HasColumnType("real");

                    b.HasKey("IdFood");

                    b.HasIndex("IdFoodTypes");

                    b.ToTable("foods");
                });

            modelBuilder.Entity("apiforapp.Models.FoodPart", b =>
                {
                    b.Property<int>("IdFoodPart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFoodPart"), 1L, 1);

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFoodPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("cacbonhydrat")
                        .HasColumnType("real");

                    b.Property<float>("calories")
                        .HasColumnType("real");

                    b.Property<float>("fat")
                        .HasColumnType("real");

                    b.Property<float>("protein")
                        .HasColumnType("real");

                    b.HasKey("IdFoodPart");

                    b.ToTable("foodParts");
                });

            modelBuilder.Entity("apiforapp.Models.FoodType", b =>
                {
                    b.Property<int>("IdFoodType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFoodType"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFoodType");

                    b.ToTable("FoodTypes");
                });

            modelBuilder.Entity("apiforapp.Models.Nutribution", b =>
                {
                    b.Property<int>("IdNutribution")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNutribution"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNutribution");

                    b.ToTable("nutributions");
                });

            modelBuilder.Entity("apiforapp.Models.Purpose", b =>
                {
                    b.Property<int>("IdPurpose")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPurpose"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPurpose");

                    b.ToTable("Purposes");
                });

            modelBuilder.Entity("apiforapp.Models.Rate", b =>
                {
                    b.Property<int>("IdRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRate"), 1L, 1);

                    b.Property<int>("foodIdFood")
                        .HasColumnType("int");

                    b.Property<int>("foodpartIdFoodPart")
                        .HasColumnType("int");

                    b.Property<int>("idFood")
                        .HasColumnType("int");

                    b.Property<int>("idFoodpart")
                        .HasColumnType("int");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.HasKey("IdRate");

                    b.HasIndex("foodIdFood");

                    b.HasIndex("foodpartIdFoodPart");

                    b.ToTable("rates");
                });

            modelBuilder.Entity("apiforapp.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("apiforapp.Models.Statebody", b =>
                {
                    b.Property<int>("IdStatebody")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatebody"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatebody");

                    b.ToTable("Statebody");
                });

            modelBuilder.Entity("apiforapp.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passsword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<int>("heigh")
                        .HasColumnType("int");

                    b.Property<int>("idRole")
                        .HasColumnType("int");

                    b.Property<int>("idStatebody")
                        .HasColumnType("int");

                    b.Property<int>("roleIdRole")
                        .HasColumnType("int");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("IdUser");

                    b.HasIndex("idStatebody");

                    b.HasIndex("roleIdRole");

                    b.ToTable("users");
                });

            modelBuilder.Entity("apiforapp.Models.DetailDietFood", b =>
                {
                    b.HasOne("apiforapp.Models.Diet", "diet")
                        .WithMany()
                        .HasForeignKey("dietidDiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiforapp.Models.Food", "food")
                        .WithMany()
                        .HasForeignKey("foodIdFood")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("diet");

                    b.Navigation("food");
                });

            modelBuilder.Entity("apiforapp.Models.DetailNutributionFood", b =>
                {
                    b.HasOne("apiforapp.Models.Food", "food")
                        .WithMany()
                        .HasForeignKey("foodIdFood")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiforapp.Models.Nutribution", "nutribution")
                        .WithMany()
                        .HasForeignKey("nutributionIdNutribution")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("food");

                    b.Navigation("nutribution");
                });

            modelBuilder.Entity("apiforapp.Models.DetailPurpose", b =>
                {
                    b.HasOne("apiforapp.Models.Purpose", "purpose")
                        .WithMany()
                        .HasForeignKey("purposeIdPurpose")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiforapp.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userIdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("purpose");

                    b.Navigation("user");
                });

            modelBuilder.Entity("apiforapp.Models.Diet", b =>
                {
                    b.HasOne("apiforapp.Models.User", "usser")
                        .WithMany()
                        .HasForeignKey("usserIdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usser");
                });

            modelBuilder.Entity("apiforapp.Models.Food", b =>
                {
                    b.HasOne("apiforapp.Models.FoodType", "FoodType")
                        .WithMany()
                        .HasForeignKey("IdFoodTypes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodType");
                });

            modelBuilder.Entity("apiforapp.Models.Rate", b =>
                {
                    b.HasOne("apiforapp.Models.Food", "food")
                        .WithMany()
                        .HasForeignKey("foodIdFood")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiforapp.Models.FoodPart", "foodpart")
                        .WithMany()
                        .HasForeignKey("foodpartIdFoodPart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("food");

                    b.Navigation("foodpart");
                });

            modelBuilder.Entity("apiforapp.Models.User", b =>
                {
                    b.HasOne("apiforapp.Models.Statebody", "Statebody")
                        .WithMany()
                        .HasForeignKey("idStatebody")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiforapp.Models.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleIdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statebody");

                    b.Navigation("role");
                });
#pragma warning restore 612, 618
        }
    }
}
